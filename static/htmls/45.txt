<p><br></p><h1><a href="http://blog.csdn.net/zhaobryant/article/details/45501241#" target="_blank">Ubuntu安装MySQL和Python库MySQLdb步骤</a></h1><h2>一、安装MySQL服务器和客户端</h2><p>&nbsp;</p><p>执行以下命令：</p><p>&nbsp;</p><p>&nbsp;</p><p> <span style="background-color: rgb(235, 241, 221);">sudo apt-get install MySQL-server-5.6 mysql-client-5.6 </span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get install libmysqlclient-dev libmysqld-dev</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">sudo rm /var/lib/mysql/ -R</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo rm /etc/mysql/ -R</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get autoremove mysql* --purge</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get remove apparmor</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get install mysql-server mysql-common</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>可能用到的命令：</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">mysql -u root -p #登陆mysql:</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get install mysql-workbench #安装workbench</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo aptitude install mysql-server-5.6</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get remove mysql-server #卸载</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get autoremove mysql-server</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get update</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo netstat -tap | grep mysql</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get -f install</span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo service mysql start #开启服务</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><h2>二、Python安装MySQLdb库</h2><p>&nbsp;</p><p>执行以下命令：</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">sudo apt-get install Python-pip </span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo apt-get install python-dev </span></p><p><span style="background-color: rgb(235, 241, 221);"> sudo pip install mysql-python</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>验证方法：</p><p>&nbsp;</p><p>进入Python命令行界面：&nbsp;import MySQLdb&nbsp;未报错即表示安装成功</p><p>&nbsp;</p><p>数据库操作命令</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">show databases;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 创建数据库</span></p><p><span style="background-color: rgb(235, 241, 221);"> create database userlogin;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 进入数据库</span></p><p><span style="background-color: rgb(235, 241, 221);"> use userlogin;</span></p><p><span style="background-color: rgb(235, 241, 221);"> show tables;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 创建数据表</span></p><p><span style="background-color: rgb(235, 241, 221);"> create table user(id int(11) unsigned auto_increment primary key not null,username varchar(25) not null,passwd varchar(25) not null,email varchar(40) not null);</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 显示数据表</span></p><p><span style="background-color: rgb(235, 241, 221);"> show tables;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 显示某个表详细信息</span></p><p><span style="background-color: rgb(235, 241, 221);"> describe user;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 选择</span></p><p><span style="background-color: rgb(235, 241, 221);"> select * from user;</span></p><p><span style="background-color: rgb(235, 241, 221);"> select * from user1 order by id DESC;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 更新</span></p><p><span style="background-color: rgb(235, 241, 221);"> update user1 set username='meimei' where id=10;</span></p><p><span style="background-color: rgb(235, 241, 221);"> update user1 set passwd = '76543';</span></p><p><span style="background-color: rgb(235, 241, 221);"> update user1 set passwd = 'there' where username = 'mama';</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 删除</span></p><p><span style="background-color: rgb(235, 241, 221);"> delete from user1 where username = 'meimei';</span></p><p><span style="background-color: rgb(235, 241, 221);"> alter table user1 drop column id;</span></p><p><span style="background-color: rgb(235, 241, 221);"> drop database scraping;</span></p><p><span style="background-color: rgb(235, 241, 221);"> # 退出</span></p><p><span style="background-color: rgb(235, 241, 221);"> quit</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><h2>解决中文？？？乱码</h2><p>以下示例给出创建数据库时指定编码的两种方式：</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">1）CREATE&nbsp;DATABASE&nbsp;mydbname&nbsp;CHARACTER SET&nbsp;utf8&nbsp;COLLATE utf8_general_ci;</span></p><p><span style="background-color: rgb(235, 241, 221);"> 2）CREATE&nbsp;DATABASE&nbsp;IF NOT&nbsp;EXISTS&nbsp;mydbname&nbsp;DEFAULT CHARACTER SET utf8;</span></p><p>  </p><p>&nbsp;</p><p>这样就是设置好了我们数据库的编码格式 当然，表的编码格式也要设置一下：</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">CREATETABLEIF NOTEXISTS test (</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;namevarchar(64)NOTNULL</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;) ENGINE=InnoDB DEFAULT CHARSET=utf8;</span></p><p>  </p><p>&nbsp;</p><p><a href="http://www.imooc.com/learn/475" target="_blank">视频教程链接 </a><a href="http://f.hiphotos.baidu.com/image/pic/item/0824ab18972bd407007242db73899e510fb3095a.jpg" target="_blank">查看图片-python和数据库连接图 </a><a href="http://b.hiphotos.baidu.com/image/pic/item/63d9f2d3572c11dfd0fd2d056b2762d0f703c2ec.jpg" target="_blank">查看图片-访问数据库流程 </a><a href="http://a.hiphotos.baidu.com/image/pic/item/b812c8fcc3cec3fd0cee4165de88d43f869427ca.jpg" target="_blank">图片-MySQLdb.connect（参数） </a><a href="http://h.hiphotos.baidu.com/image/pic/item/cefc1e178a82b9016d4722237b8da9773912ef3c.jpg" target="_blank">图片-connection支持的方法</a></p><p>&nbsp;</p><p>&nbsp;</p><h2>python操作数据库</h2><p><a href="http://www.runoob.com/python/python-mysql.html" target="_blank">http://www.runoob.com/python/python-mysql.html</a></p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">conn = MySQLdb.connect(</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;host='127.0.0.1',</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user='root',</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;passwd='12345',</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;port=3306,</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;db='position1',</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;charset='utf8'</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)</span></p><p><span style="background-color: rgb(235, 241, 221);"> cursor = conn.cursor()</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">sql = "INSERT INTO tb_tasks(id, sp_id, task) VALUES('%d', '%d', '%s')" % (task_id, sp_id, task_name)</span></p><p><span style="background-color: rgb(235, 241, 221);"> try:</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;cursor.execute(sql)</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;conn.commit()</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;print u'存储成功：...'</span></p><p><span style="background-color: rgb(235, 241, 221);"> except Exception as e:</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;print u'存储失败:%s,接下来回滚' %&nbsp;e</span></p><p><span style="background-color: rgb(235, 241, 221);"> &nbsp;&nbsp;&nbsp;conn.rollback()</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">cursor.close()</span></p><p><span style="background-color: rgb(235, 241, 221);"> conn.close()</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>替换回车换行符</p><p>&nbsp;</p><p>在富文本内容中通常会出现回车、换行内容。在sql数据库中这些回车、换行符，输出html后，表现为空格。 这里是在数据导出、导入中发现的，通常把回车、换行符找出来，用&lt;br&gt;替换。 这里使用了，sql 函数。replace(string<em>expression , string</em>pattern , string_replacement),第一个参数：要查找的字段。第二个参数：要查找的字符。第三个参数：要替换成的字符。</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">char(9) 水平制表符</span></p><p><span style="background-color: rgb(235, 241, 221);"> char(10)换行键</span></p><p><span style="background-color: rgb(235, 241, 221);"> char(13)回车键</span></p><p><span style="background-color: rgb(235, 241, 221);"> 1&gt; 回车符&nbsp;char(13)</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> SELECT *, REPLACE(detail, CHAR(13) , '&lt;br&gt;') AS 显示替换后的内容 FROM Test</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> 2&gt;换行符</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> SELECT *, REPLACE(detail, CHAR(10), '&lt;br&gt;') AS 显示替换后的内容 FROM Test</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> 3&gt;回车换行符</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> SELECT *, REPLACE(detail, CHAR(13) + CHAR(10), '&lt;br&gt;') AS 显示替换后的内容 FROM Test</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> 4&gt;将回车换行符替换成&lt;BR&gt;&lt;BR&gt;</span></p><p><span style="background-color: rgb(235, 241, 221);"> </span></p><p><span style="background-color: rgb(235, 241, 221);"> UPDATE Test</span></p><p><span style="background-color: rgb(235, 241, 221);"> SET detail = REPLACE(detail, CHAR(13) + CHAR(10), '&lt;br&gt;&lt;br&gt;')</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">update NICCS.tb_course_dm set method = replace(method,char(10),'') ;</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><h2><img src="//:0" height="2" width="851"></h2><h2>一些总结</h2><p>&nbsp;</p><p>连接数据库</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">1 #!/usr/bin/env python</span></p><p><span style="background-color: rgb(235, 241, 221);"> 2 #coding=utf-8</span></p><p><span style="background-color: rgb(235, 241, 221);"> 3 import MySQLdb</span></p><p><span style="background-color: rgb(235, 241, 221);"> 4 conn = MySQLdb.connect('localhost','root','rootpass','oj',charset='utf8')</span></p><p><span style="background-color: rgb(235, 241, 221);"> 5 cur = conn.cursor()</span></p><p>  </p><p>&nbsp;</p><p>连接数据库时要注意数据库编码，不然一堆编码问题很愁人的～最好统一使用utf8编码。</p><p>&nbsp;</p><p>执行sql语句</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">1 sql_content = "select * from user"</span></p><p><span style="background-color: rgb(235, 241, 221);"> 2 cur.execute(sql_content)</span></p><p><span style="background-color: rgb(235, 241, 221);"> 3 data = cur.fetchall()</span></p><p><span style="background-color: rgb(235, 241, 221);"> 4 for i in data:</span></p><p><span style="background-color: rgb(235, 241, 221);"> 5&nbsp;&nbsp;&nbsp;&nbsp;print i</span></p><p>  </p><p>&nbsp;</p><p>可以用fetchone来获取一条结果。如果是插入数据，要执行commit操作，不然数据不会被写入数据库。最好是执行完所有的sql语句之后再commit，实践证明，这样会带来很大的速度提升。</p><p>&nbsp;</p><p>重点讲讲插入和更新数据</p><p>&nbsp;</p><p>插入或更新数据有两种方法</p><p>&nbsp;</p><p>1.拼接sql语句：</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">sql_content = "insert into table(key1,key2,key3) values (%s,%s,%s)"%(value1,value2,value3)</span></p><p><span style="background-color: rgb(235, 241, 221);"> cur.execute(sql_content)</span></p><p>  </p><p>&nbsp;</p><p>2.用问号替代</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">sql_content = "insert into table(key1,key2,key3) values (?,?,?)"</span></p><p><span style="background-color: rgb(235, 241, 221);"> cur.execute(sql_content,(value1,value2,value3))</span></p><p>  </p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>如果value的值存在不确定性，那么上面两条语句存在sql注入风险。</p><p>&nbsp;</p><p>例如，如果value是一段html代码，html代码中如果存在引号（但引号或者双引号），如果不加处理，那么sql语句就将被截断，将会引发插入错误。</p><p>&nbsp;</p><p>如果value中存在英文逗号，将会造成前面的key和后面的value不对应，也不能正确插入数据。</p><p>&nbsp;</p><p>如果value中存在反斜线\，那么在python中反斜线后面的数据将被转义，如果不处理插入的话将会造成字符丢失或者其他不可遇见的结果。</p><p>&nbsp;</p><p>因为在sql中和在python中有好多含有特殊含义的符号，如果不能很好的处理的话将会出现好多问题，幸好MYSQLdb模块给我们提供了一个<strong>escape_string</strong>方法，用这个方法能自动处理好上面的问题，特别方便。</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">#特殊含义符号处理</span></p><p><span style="background-color: rgb(235, 241, 221);"> author_name = MySQLdb.escape_string(author_name)</span></p><p><span style="background-color: rgb(235, 241, 221);"> content = MySQLdb.escape_string(content)</span></p><p>  </p><p>&nbsp;</p><p>此外，不建议一次插入多个数据，因为一次插入多个数据有可能造成key和value不能对应，昨天因为这个问题纠结了一下午。最后将一条sql语句拆成多条语句，也就是一次插入一个value才将问题解决</p><p>&nbsp;</p><p>格式化输出显示</p><p>注意斜杠的方向</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">select * from experiment_result\G</span></p><p>  </p><p>&nbsp;</p><p>给table添加字段column</p><p>&nbsp;</p><p>  <span style="background-color: rgb(235, 241, 221);">ALTER TABLE `cloudlab`.`experiment_result` </span></p><p><span style="background-color: rgb(235, 241, 221);"> ADD COLUMN `grade_time` TIMESTAMP NULL AFTER `edit_user_id`;</span></p><p>  </p><p>&nbsp;</p>